import unittest
import errorx as ex
from errorx import ErrorXOptions

class TestErrorXLibrary(unittest.TestCase):
	
	def xtest_run_protocol(self):
		options = ex.ErrorXOptions('testing/test.fastq','fastq')
		options.outfile( 'testing/out.tsv' )
		ex.run_protocol( options )

		output = '''
		SRR4431788.10	IGHV4-4*07	83.420000	7.68E-54	N/A	N/A	N/A	IGHJ4*02	95.238000	5.97E-16	-	VH	True	GCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAAC	ARGLKYDASTYSLDN	TGGACAGGGGTCCGGCAGACCGCGGGGAAGCCACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	TGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG------------------------------TTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG	WTGVRQTAGKPLQWIGRIYVTGSIDYNPSLNGRVTMSIDSSKNLFSLKMHSVTAADTAVYYCARGLKYDASTYSLDNWGQGILVTVSS	TGGACAGGGGTCCGGCAGACCGCGGGGAAGNNACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCNAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	WTGVRQTAGKLQWIGRIYVTGSIDYNPSLNGRVTMSIDSSKNLFSLKMHSVTAADTAVYYCARGLKYDSTYSLDNWGQGILVTVSS	3'''.strip()

		self.assertEqual(
			open( 'testing/out.tsv' ).readlines()[1].strip(),
			output 
			)

		options = ex.ErrorXOptions('testing/test.tsv','tsv')
		options.outfile( 'testing/out.tsv' )
		ex.run_protocol( options )

		output = '''
		test		N/A	N/A		N/A	N/A		N/A	N/A		VH	False	N/A	N/A	TGGACAGGGGTCCGGCAGACCGCGGGGAAGCCACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	TGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG------------------------------TTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG	N/A	TGGACAGGGGTCCGGCAGACCGCGGGGAAGNNACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCNAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	N/A	3
		'''.strip()

		self.assertEqual(
			open( 'testing/out.tsv' ).readlines()[1].strip(),
			output 
			)

	def test_correct_sequences(self):

		N = 501
		sequences = ['AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACCCAGCCTACCTGCAGCTCAGCCGCCTGACATCTGAGGACACTGCCGTCTCTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT']*N

		germline_sequences = ['AGGGGCCTCAGTCAAGTTGTCCTGCACAGCTTCTGGCTTCAACATTAAAGACACCTATATGCACTGGGTGAAGCAGAGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTGCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACACAGCCTACCTGCAGCTCAGCAGCCTGACATCTGAGGACACTGCCGTCTATTACTGTGCTAGA-----------------------------------']*N

		phred_scores = ['GGFGGG:CFGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDGGGGGFGGEFB@FFGGGGFGGGCFGFGGGGGGGGGGGGGGGGB?=FFFGGGGGGFFGGDFFGGGGGGGGGGGGGGGGGGGGGGGGGGDFGGGDEFGGGG7:EFGFFGGGGGGGFFFGGF@CFGGGGGGGGGGFGFGG7DFGGGGGGGFGFDDFGGFF6EFFFDFF>7CFFFC8F<=6A<F6>>F55<2:4*20:C44F276>:?##CCCCCGGAFGGFFFFGFGGGGGFGGGG']*N

		corrected_seq = 'AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACNCAGCCTACCTGCAGCTCAGCNGCCTGACATCTGAGGACACTGCCGTCTNTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT'

		import numpy as np
		import pandas as pd
		options = ErrorXOptions(nthreads=-1)
		results = ex.correct_sequences(
			pd.Series(sequences), 
			pd.Series(germline_sequences),
			pd.Series(phred_scores),
			options )
		
		print results[0]
		return
		self.assertEqual(results[0], corrected_seq)

		results = ex.correct_sequences(sequences[0], 
			   germline_sequences[0],
			   phred_scores[0] )

		self.assertEqual(results[0], corrected_seq)

	def xtest_predicted_errors(self):

		sequences = 'AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACCCAGCCTACCTGCAGCTCAGCCGCCTGACATCTGAGGACACTGCCGTCTCTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT'

		germline_sequences = 'AGGGGCCTCAGTCAAGTTGTCCTGCACAGCTTCTGGCTTCAACATTAAAGACACCTATATGCACTGGGTGAAGCAGAGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTGCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACACAGCCTACCTGCAGCTCAGCAGCCTGACATCTGAGGACACTGCCGTCTATTACTGTGCTAGA-----------------------------------'

		phred_scores = 'GGFGGG:CFGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDGGGGGFGGEFB@FFGGGGFGGGCFGFGGGGGGGGGGGGGGGGB?=FFFGGGGGGFFGGDFFGGGGGGGGGGGGGGGGGGGGGGGGGGDFGGGDEFGGGG7:EFGFFGGGGGGGFFFGGF@CFGGGGGGGGGGFGFGG7DFGGGGGGGFGFDDFGGFF6EFFFDFF>7CFFFC8F<=6A<F6>>F55<2:4*20:C44F276>:?##CCCCCGGAFGGFFFFGFGGGGGFGGGG'

		corrected_seq = 'AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACNCAGCCTACCTGCAGCTCAGCNGCCTGACATCTGAGGACACTGCCGTCTNTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT'

		result = ex.get_predicted_errors(sequences, 
			   germline_sequences,
			   phred_scores )

		for a,b in result:
			print b
			
		# self.assertAlmostEqual(result[190][1], 0.998169799964, 12)
		# self.assertAlmostEqual(result[211][1], 0.96960021145, 12)
		# self.assertAlmostEqual(result[239][1], 0.965957486636, 12)


if __name__ == '__main__':
	unittest.main()

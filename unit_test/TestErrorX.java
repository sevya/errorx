import java.util.ArrayList; 
import errorx.ErrorX;
import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.assertEquals;

import errorx.ErrorXOptions;

import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

import java.io.IOException;

public class TestErrorX {

	@Test
	public void testRunProtocol() throws IOException {
		ErrorXOptions options = new ErrorXOptions( "testing/test.tsv", "tsv" );
		options.outfile( "testing/out.tsv" );
		
		ErrorX ex = new ErrorX();
		ex.runProtocol( options );

		List<String> lines = Files.readAllLines( Paths.get("testing/out.tsv" ));
		assertEquals( 
			lines.get(1), 
			"test		N/A	N/A		N/A	N/A		N/A	N/A		VH	False	N/A	N/A	TGGACAGGGGTCCGGCAGACCGCGGGGAAGCCACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	TGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG------------------------------TTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG	N/A	TGGACAGGGGTCCGGCAGACCGCGGGGAAGNNACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCNAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	N/A	3	"
			);

		options.infile( "testing/test.fastq" );
		options.format( "fastq" );
		ex.runProtocol( options );

		lines = Files.readAllLines( Paths.get("testing/out.tsv" ));
		assertEquals( 
			lines.get(1), 
			"SRR4431788.10	IGHV4-4*07	83.420000	7.68E-54	N/A	N/A	N/A	IGHJ4*02	95.238000	5.97E-16	-	VH	True	GCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAAC	ARGLKYDASTYSLDN	TGGACAGGGGTCCGGCAGACCGCGGGGAAGCCACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCCAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	TGGAGCTGGATCCGGCAGCCCGCCGGGAAGGGACTGGAGTGGATTGGGCGTATCTATACCAGTGGGAGCACCAACTACAACCCCTCCCTCAAGAGTCGAGTCACCATGTCAGTAGACACGTCCAAGAACCAGTTCTCCCTGAAGCTGAGCTCTGTGACCGCCGCGGACACGGCCGTGTATTACTGTGCGAGAG------------------------------TTGACTACTGGGGCCAGGGAACCCTGGTCACCGTCTCCTCAG	WTGVRQTAGKPLQWIGRIYVTGSIDYNPSLNGRVTMSIDSSKNLFSLKMHSVTAADTAVYYCARGLKYDASTYSLDNWGQGILVTVSS	TGGACAGGGGTCCGGCAGACCGCGGGGAAGNNACTGCAGTGGATTGGCCGAATCTATGTTACTGGAAGCATCGACTACAACCCCTCCCTCAACGGTCGAGTCACCATGTCTATAGACTCGTCGAAGAACCTCTTCTCCCTGAAGATGCACTCAGTGACTGCCGCGGACACGGCCGTCTATTACTGTGCGAGAGGCCTGAAATATGATGCNAGTACTTATTCCCTTGACAACTGGGGCCAGGGAATCCTGGTCACCGTCTCCTCAG	WTGVRQTAGKLQWIGRIYVTGSIDYNPSLNGRVTMSIDSSKNLFSLKMHSVTAADTAVYYCARGLKYDSTYSLDNWGQGILVTVSS	3	" 
			);

	}

	@Test
	public void testNumbers() {

		int n = 502;
		String[] sequences = new String[n];
		String[] germline_sequences = new String[n];
		String[] phred_scores = new String[n];

		for ( int ii = 0; ii < n; ++ii ) {
			sequences[ii] = "AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACCCAGCCTACCTGCAGCTCAGCCGCCTGACATCTGAGGACACTGCCGTCTCTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT";
			germline_sequences[ii] = "AGGGGCCTCAGTCAAGTTGTCCTGCACAGCTTCTGGCTTCAACATTAAAGACACCTATATGCACTGGGTGAAGCAGAGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTGCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACACAGCCTACCTGCAGCTCAGCAGCCTGACATCTGAGGACACTGCCGTCTATTACTGTGCTAGA-----------------------------------";
			phred_scores[ii] = "GGFGGG:CFGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDGGGGGFGGEFB@FFGGGGFGGGCFGFGGGGGGGGGGGGGGGGB?=FFFGGGGGGFFGGDFFGGGGGGGGGGGGGGGGGGGGGGGGGGDFGGGDEFGGGG7:EFGFFGGGGGGGFFFGGF@CFGGGGGGGGGGFGFGG7DFGGGGGGGFGFDDFGGFF6EFFFDFF>7CFFFC8F<=6A<F6>>F55<2:4*20:C44F276>:?##CCCCCGGAFGGFFFFGFGGGGGFGGGG";
		}
				


		String[] correctedSequences = new ErrorX().correctSequences( sequences, germline_sequences, phred_scores );

		assertEquals( correctedSequences.length, 502 );

		assertEquals( correctedSequences[0], "AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACNCAGCCTACCTGCAGCTCAGCNGCCTGACATCTGAGGACACTGCCGTCTNTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT" );

	}

	@Test
	public void testCorrectSequence() {
		String[] sequences = new String[1];
		sequences[0] = "AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACCCAGCCTACCTGCAGCTCAGCCGCCTGACATCTGAGGACACTGCCGTCTCTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT";

		String[] germline_sequences = new String[1];
		germline_sequences[0] = "AGGGGCCTCAGTCAAGTTGTCCTGCACAGCTTCTGGCTTCAACATTAAAGACACCTATATGCACTGGGTGAAGCAGAGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTGCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACACAGCCTACCTGCAGCTCAGCAGCCTGACATCTGAGGACACTGCCGTCTATTACTGTGCTAGA-----------------------------------";

		String[] phred_scores = new String[1];
		phred_scores[0] = "GGFGGG:CFGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDGGGGGFGGEFB@FFGGGGFGGGCFGFGGGGGGGGGGGGGGGGB?=FFFGGGGGGFFGGDFFGGGGGGGGGGGGGGGGGGGGGGGGGGDFGGGDEFGGGG7:EFGFFGGGGGGGFFFGGF@CFGGGGGGGGGGFGFGG7DFGGGGGGGFGFDDFGGFF6EFFFDFF>7CFFFC8F<=6A<F6>>F55<2:4*20:C44F276>:?##CCCCCGGAFGGFFFFGFGGGGGFGGGG";


		String[] correctedSequences = new ErrorX().correctSequences( sequences, germline_sequences, phred_scores );

		assertEquals( correctedSequences.length, 1 );

		assertEquals( correctedSequences[0], "AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACNCAGCCTACCTGCAGCTCAGCNGCCTGACATCTGAGGACACTGCCGTCTNTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT" );

	}


	@Test
	public void testPredictedError() {
		String sequence = "AGGGGCCACAGTCAAGTTGTCCTGCACAGCTTCTGGCCTCAACATTAAAGACACCTATATGCACTGGCTGAAGCAGTGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTCCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACCCAGCCTACCTGCAGCTCAGCCGCCTGACATCTGAGGACACTGCCGTCTCTTACTGTGCTAGAATGGCCNNCTGAAAAAACAAAACAACAACTTCATT";

		String germline_sequence = "AGGGGCCTCAGTCAAGTTGTCCTGCACAGCTTCTGGCTTCAACATTAAAGACACCTATATGCACTGGGTGAAGCAGAGGCCTGAACAGGGCCTGGAGTGGATTGGAAGGATTGATCCTGCGAATGGTAATACTAAATATGACCCGAAGTTCCAGGGCAAGGCCACTATAACAGCAGACACATCCTCCAACACAGCCTACCTGCAGCTCAGCAGCCTGACATCTGAGGACACTGCCGTCTATTACTGTGCTAGA-----------------------------------";

		String phred_score = "GGFGGG:CFGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGDGGGGGFGGEFB@FFGGGGFGGGCFGFGGGGGGGGGGGGGGGGB?=FFFGGGGGGFFGGDFFGGGGGGGGGGGGGGGGGGGGGGGGGGDFGGGDEFGGGG7:EFGFFGGGGGGGFFFGGF@CFGGGGGGGGGGFGFGG7DFGGGGGGGFGFDDFGGFF6EFFFDFF>7CFFFC8F<=6A<F6>>F55<2:4*20:C44F276>:?##CCCCCGGAFGGFFFFGFGGGGGFGGGG";

		double[] errorPredictions = new ErrorX().getPredictedErrors( 
			sequence, 
			germline_sequence, 
			phred_score );

		assertEquals( errorPredictions[ 190 ], 0.998169799964, 0.000000000001 );
		assertEquals( errorPredictions[ 211 ], 0.96960021145, 0.000000000001 );
		assertEquals( errorPredictions[ 239 ], 0.965957486636, 0.000000000001 );
	}
}
